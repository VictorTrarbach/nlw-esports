npm init -y
Package.json (defini√ß√µes principais) - tbm fica a 
refer√™ncia para as depend√™ncias.

npm install express
Express - micro-framework(conjunto de c√≥digos) (permite a gente escrever coisas muito comuns 
do back-end s√≥ que no Node), ex Rotas, listagem de usu√°rios, cadastro de usu√°rios, quando 
instalamos essas depend√™ncias podemos utilizar elas. 
(O pr√≥prio express tem suas depend√™ncias que tbm tem suas depend√™ncias)

Package-lock pro npm ter uma refer√™ncia mais r√°pida pras depend√™ncia e quais depend√™ncias tem depend√™ncias em comum para ficar mais r√°pido de instalar

Coloquei o "type": "module", no package.json *Apaga, n precisa se n d√° BO*

para usar o import express from 'express', fica mais leg√≠vel e atual

Usei o Hoppscotch(Insomnia) enquanto o node src/server.mjs estava rodando para fazer a requisi√ß√£o com a URL http://localhost:3333/ads

Tipagem est√°tica: enquanto a gente desenvolve, tem um processo em background que vai testando os caminhos do nosso c√≥digo, pra ver se o c√≥digo que estamos escrevendo √© v√°lido, uma forma de EVITAR ERROS de irem para PRODU√á√ÉO, j√° no desenvolvimento. Testa o fluxo do nosso c√≥digo para ver se pode ou n√£o dar algum erro

npm i typescript

O Node n entende typescript nativamente, apenas javascript, s√≥ utilizamos o Typescript para DESENVOLVIMENTO, quando for colocar a aplica√ß√£o para produ√ß√£o, a√≠ o code precisa estar em Javascript

Como vamos usar s√≥ para desenvolvimento, n faz sentido usar como uma depend√™ncia de produ√ß√£o(comum)
Ent√£o instalamos como uma depend√™ncia s√≥ de desenvolvimento
npm i typescript -D

trocamos o server.mjs para server.ts

se tento rodar node src/server.mjs
n funciona, pq o Node n entende o typescript
Precisamos converter ele para um formato que o Node entenda

{*Notas

*// www.minhaapi.com/ads*
*Est√° em modo de desenvolvimento ent√£o localhost:3000/ads (n precisa de um dom√≠nio)*
*logo abaixo vai ser qual a fun√ß√£o que vai executar quando acessar a rota*

/*request busca informa√ß√µes vindo da requisi√ß√£o*/
/*response envia uma resposta pro cliente*
//*pode mandar texto send('Acessou Ads!')*
//*mas nosso backend vai retornar geralmente no formato json*
//*N √© legal testar as rotas no navegador, pois o navegador n√£o entende json*

//*Ouvindo novas requisi√ß√µes e n√£o pare at√© o user parar*

}

package.json
"scripts": {
    
    "build": "tsc" 
  },

{/*tsc is the typescript compiler*/ }

npm run build
n√£o roda ainda pq precisamos de um arquivo de configura√ß√µes

npx serve para executarmos alguma biblioteca ou execut√°vel que tenhamos instalado dentro do nosso projeto
rodamos o compilador do typescript

Cria um arquivo de configura√ß√µes do typescript para n√≥s= tsconfig.json
npx tsc --init
Cria um arquivo Javascript, pq ele leu o Typescript e gerou um Javascript com base no arquivo
npm run build

Deum erro
node src/server.js

est√° usando o padr√£o require, n est√° usando o module
ent√£o mudo para  "module": "ES2020", no tsconfig.json
*n precisa do ES2020 - Deixa CommonJS*

npm run build
e
node src/server.js

tsconfig:

"rootDir": "./src",
"outDir": "./build", 
N quero que os arquivos js sejam gerados no mesmo diret√≥rio dos ts
quero que fique em uma pasta build
apaga server.js

npm run build

typescript:
Tipagem est√°tica. Permite a gente definir qual √© o formato que esperamos de cada informa√ß√£o dentro da nossa aplica√ß√£o

//EX_Tipagem_Est√°tica

tsconfig.json
Descomenta a linha moduleResolution: "node",

Algumas bibliotecas do npm n√£o tem suporte nativo ao Typescript vemos isso no npmjs.com/package/express 
por exemplo no caso e vejo oq tenho que 

J√° que √© algo do typescript, vou usar apenas em Desenv , mas n em produ√ß√£o
npm install @types/express -D

Ao adicionar um an√∫ncio novo no ts ou no js ainda n muda na requisi√ß√£o do hoppscotch
pq preciso fechar o node, rodar dnv e ok

Isso √© chato, vamos instalar : npm i ts-node-dev -D
e adicionar no package.json:
"scripts": {
    
    "dev": "tsnd src/server.ts"
  },


Deu ruim, apaga o type:module do package.json

e no tsconfig.json tira o module -> "ES2020"
e substitui  pro CommonJS

npm run dev
D√° restart autom√°tico da API, n precisa parar e rodar üòã

Criar nosso projeto React üåü

Bora usar o Vite - projeto React - view - qualquer outro projeto utilizando bibliotecas mais modernas de Front-End Very fast 

Pq precisamos dele?  Assim como utilizamos o ts-node-dev pra converter o nosso c√≥digo ts -> js pro Node conseguir entender, tem muita coisa aque vamos escrever no React/View/Svelt que n√£o √© entendido pelo Browser - Ele entende o js mais puro poss√≠vel 
S√≥ que o React/View possuem funcionalidades que o browser ainda n√£o entende

Precisamos de uma ferramenta para fazer a compila√ß√£o, converter em um formato que o Browser entenda
E o Vite √© a ferramenta que faz isso da maneira mais r√°pida e delicinha

Vamos para uma pasta acima, no caso cd .. - esports 
npm create vite@latest

Nome: web/framework/variant e GG

cd web
code .

npm install (est√° sem node_modules)

remove assets no src e todos os .css

remove importa√ß√µes pro css, app css e logo no react, remove todas as importa√ß√µes de cima

tudo dentro da Function App e coloca o return apenas, s√≥ vai na f√© mano

JSX -> Js + XML (HTML)

React -> Conjunto de HTML/CSS/JS -> Componentes

npm run dev

Muda autom√°tico, tudo lindo

faz os exports do Figma para a pasta assets

Vite importa para dentro do head o css joga o conte√∫do na p√°gina, sem precisar ir no html e escrever um link com css.

tailwindcss.com (Produtividade) Remove a necessidade de ficar trocando pra html/css/html/css....
para montar a interface da aplica√ß√£o

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init

Configura√ß√µes
tailwind.config.cjs:
Passar onde v√£o estar os arquivos html que v√£o conter classes do Tailwind
content: [
  './src/** /*.tsx',
  './index.html'
]
Dentro da pasta src, ** todas as outras pastas que estiverem aqui dentro, *.tsx todos os arquivos que terminarem com .tsx s√£o os arquivos onde vai estar o conte√∫do da aplica√ß√£o.

Criar pasta styles, com um arquivo main.css
Dentro dela:
@tailwind base; 
@tailwind components;
@tailwind utilities;

npx tailwindcss init -p Pra criar o postcss.config.cjs  


npm run dev


npm i phosphor-react



fontFamily: {
      sans: ['Inter', 'sans-serif'],
    },

2

npm install @radix-ui/react-dialog
olhar components/Dialog do radix-ui